{"version":3,"sources":["webpack:///webpack/bootstrap ec96130134fbb3aa8525","webpack:///./src/index.js","webpack:///./src/image-editor.js","webpack:///./src/utils.js"],"names":["window","imageEditor","imagePath","imageAltText","onWorkSpaceUpdated","document","querySelector","newImageEditorState","croppedImageObj","croppedImageAtag","previewImage","canvas","toDataURL","src","width","cropped","height","href","template","original","rotated","innerHTML","NAMESPACE","IMAGE_ALT_TEXT","ACTIVE_CLASS","EDITOR_GUTTER","DEBUG","ImageEditor","props","container","image","transform","ratio","translateX","translateY","degrees","radians","origin","position","left","top","drag","startX","startY","dx","dy","maxRatio","croppingArea","maxDimensions","minDimensions","right","bottom","delta","touched","boundary","constrain","outerContainer","onImageLoaded","bind","updateWorkspace","onWindowResize","onStartDragCropArea","onDragCropArea","onStopDragCropArea","onStartCropResize","onCropResize","onStopCropResize","fragment","createDocumentFragment","imageObj","Image","setAttribute","className","onload","onerror","imageObjClone","cloneNode","canvasWorkspace","tagName","cropAreaContainer","children","imageEditorWorkspace","imageEditorContainer","addEventListener","passive","dragging","appendChild","dragRequestId","resizing","cropActionTriggered","frameRateInterval","requestAnimationFrameId","lastTimestamp","transformMatrices","transformMatrix","inverseTransformMatrix","performance","now","setTimeout","requestAnimationFrame","event","preventDefault","target","stopImmediatePropagation","style","transition","cropEvent","mousePos","x","y","newDx","newDy","scale","Object","assign","removeEventListener","drawImage","classList","contains","shiftKey","isNaN","console","log","zoomOut","zoomInImage","scaleRatio","anotherScaleRatio","outerContainerCenterX","outerContainerCenterY","newPositionX","newPositionY","timestamp","elapsedTime","offsetWidth","offsetHeight","naturalWidth","naturalHeight","context","getContext","scaledCropWidth","Math","floor","scaledCropHeight","clearRect","save","sourceCoords","sourceX","sourceY","sourceWidth","sourceHeight","destX","destY","destWidth","destHeight","restore","noop","throttle","createElement","getOffsetRelativeToParent","getCenterPositionRelativeToParent","getMousePosition","calculateAspectRatioFit","calculateOriginalDimensionsFromScaled","transformCSS","getRadianFromDegrees","getDegreesFromRadians","regExp","hasClass","removeClass","addClass","createTransformMatrix","getOriginalCoordinatesFromTransformedMatrix","Function","prototype","type","name","obj","running","func","throttledRequestAnimationFrame","dispatchEvent","CustomEvent","options","element","attributes","attr","text","createTextNode","length","i","childrenLength","HTMLElement","childCssSelector","parentCssSelector","childElem","parentElem","Error","childRect","getBoundingClientRect","parentRect","childElement","parentElement","contextElement","offsetLeft","pageXOffset","offsetTop","pageYOffset","pageX","touches","pageY","srcWidth","srcHeight","maxWidth","maxHeight","gutter","aspectRatio","min","scaledWidth","scaledHeight","PI","RegExp","Element","test","replace","remove","add","rotate","cos","sin","cross","xx","yy"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ec96130134fbb3aa8525","import ImageEditor from './image-editor';\n\nwindow.imageEditor = new ImageEditor(\n    {\n        imagePath: 'http://localhost:8888/src/amsler.jpg',\n        imageAltText: 'A village after dark',\n        onWorkSpaceUpdated\n    },\n    document.querySelector( '.media-image-editor__canvas-container' )\n);\n\n\n// DEBUG\nfunction onWorkSpaceUpdated( newImageEditorState ) {\n    const croppedImageObj = document.querySelector( '.media-image-editor_debug__preview-container img' );\n    const croppedImageAtag = document.querySelector( '.media-image-editor_debug__preview-container a' );\n    const previewImage = newImageEditorState.canvas.toDataURL('image/jpeg', 0.8);\n    croppedImageObj.src = previewImage;\n    croppedImageObj.width = newImageEditorState.cropped.width;\n    croppedImageObj.height = newImageEditorState.cropped.height;\n    croppedImageAtag.href = previewImage;\n\n    const template = `\n        <li>\n            <var>Original image dimensions</var>\n            <samp>\n                ${newImageEditorState.original.width}\n                x ${newImageEditorState.original.height}\n            </samp>\n        </li>\n        <li>\n            <var>Cropped dimensions</var>\n            <samp>\n                ${newImageEditorState.cropped.width} x ${newImageEditorState.cropped.height}\n            </samp>\n        </li>\n        <li><var>Cropped coordinates</var> <samp>TBD</samp></li>\n        <li><var>Rotated</var> <samp>${newImageEditorState.cropped.rotated}</samp></li>\n        <li><var>Ratio to original image</var> <samp>TBD</samp></li>\n    `;\n\n    document.querySelector( '.media-image-editor_debug-values ul' ).innerHTML = template;\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import {\n    noop,\n    createElement,\n    calculateAspectRatioFit,\n    getRadianFromDegrees,\n    addClass,\n    hasClass,\n    removeClass,\n    getMousePosition ,\ngetOffsetRelativeToParent,\ncreateTransformMatrix,\ngetOriginalCoordinatesFromTransformedMatrix } from './utils';\n\nconst NAMESPACE = 'image-editor';\nconst IMAGE_ALT_TEXT = 'Image being edited';\nconst ACTIVE_CLASS = 'image-editor__active';\nconst EDITOR_GUTTER = .7;\nconst DEBUG = true;\n\n// https://codepen.io/anon/pen/YQJmMr\n//https://stackoverflow.com/questions/34597160/html-canvas-mouse-position-after-scale-and-translate\n\n\n\n// animationframe\n// drawImage while resizing crop area\n// https://stackoverflow.com/questions/6198771/drawing-image-in-canvas-at-an-angle-without-rotating-the-canvas\n// https://stackoverflow.com/questions/41847928/scaling-the-image-and-fitting-in-the-canvas-after-rotation\n\n// when crop tool hits boundary and there's image overflow, zoom/scale image down\n// when cropping down, cropped area zooms out to max width and height according to aspect ratio of container\n/*\n * Cropping area\n * on page load dimensions of the cropping area = the scaled dims of the image\n *\n * 1.    the min dimensions of the cropping area:\n *\n *       a) when the scaled image dims are >= than the cropped area ? 50px square (or according to the aspect ratio)\n *       b) when the scaled image dims === cropped area ? image dims\n *\n * 2.    the max dimensions of the cropping area:\n *       a) when the image dims are > than the cropped area ? = the container bounds - gutter\n *\n *       b) when a crop handler reaches its max bound in any corner\n *       i) if scaled image dim are greater than the cropped area ? make transform-origin the dragged corner of the cropped Area and scale the image\n *      while the mouse is down according to mouse position * sensitivity (the more image overflow there is the faster the growth) until the\n *      cropped area dims reach the scaled height or width of the image\n *\n *      c) when scaled image dims === cropping area dims ?\n *\n * */\n\n/*\n\n// experimental zoom out calculations, might not work\n// which is distance between the dragged corner and the nearest corner of the scaled image\n// it should form some sort of rectangle so the distance is the hypotenuse  \nfunction getHypotenuse ( a, b ) {\n    return Math.sqrt( (a * a) + ( b * b ) );\n}\nfunction getZoomRatio ( newHypontenuse, oldHypontenuse ) {\n    return newHypontenuse / oldHypontenuse   ;\n}\n*/\n\n\nexport default class ImageEditor {\n\n    constructor( props, container ) {\n\n        // cache of computed image properties\n        this.image = {\n            transform: {\n                ratio: 0,\n                translateX: 0,\n                translateY: 0,\n                degrees: 0,\n                radians: getRadianFromDegrees( 0 ),\n                origin: [ 'center', 'center' ]\n            },\n            // this will contain the last offset position of the image\n            // calculated from traslated origin\n            position: {\n                left: 0,\n                top: 0\n            },\n            rotated: false,\n            width: 0,\n            height: 0,\n            drag: {\n              startX:0,\n              startY:0,\n              dx: 0,\n              dy: 0  \n            },\n            maxRatio: 20\n        };\n\n        // the crop tool\n        this.croppingArea = {\n            // maximum dimensions of the crop tool\n            // crop rectangle cannot be bigger than these values\n            // update with viewport size * aspect ratio\n            maxDimensions: {\n                width: 0,\n                height: 0\n            },\n            // minimum dimensions of the crop tool\n            // crop rectangle cannot be smaller than these values\n            // update with aspect ratio\n            minDimensions: {\n                width: 50,\n                height: 50\n            },\n            // current position of the crop rectangle  \n            position: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            // differences between old and new crop positions \n            delta: {\n              top: 0,\n              right: 0,\n              bottom: 0,\n              left: 0\n            },\n            // current dimensions\n            width: 0,\n            height: 0,\n            touched: false,\n            boundary: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            }\n        };\n\n        this.constrain = false;\n\n        // cache of computed this.imageEditorContainer properties\n        this.outerContainer = {\n            width: 0,\n            height: 0\n        };\n\n        // this will be an ajax call\n        this.imagePath = props.imagePath;\n\n        // append elements\n        this.container = container;\n\n        // bind class methods to this\n        this.onImageLoaded = this.onImageLoaded.bind( this );\n        this.updateWorkspace = this.updateWorkspace.bind( this );\n        this.onWindowResize = this.onWindowResize.bind( this );\n        this.onStartDragCropArea = this.onStartDragCropArea.bind( this );\n        this.onDragCropArea = this.onDragCropArea.bind( this );\n        this.onStopDragCropArea = this.onStopDragCropArea.bind( this );\n        this.onStartCropResize = this.onStartCropResize.bind( this );\n        this.onCropResize = this.onCropResize.bind( this );\n        this.onStopCropResize = this.onStopCropResize.bind( this );\n\n\n        // create elements\n        const fragment = document.createDocumentFragment();\n\n        // the image to manipulate\n        this.imageObj = new Image();\n        this.imageObj.setAttribute('crossOrigin', 'anonymous');\n        this.imageObj.className = `${NAMESPACE}__image-layer`;\n        this.imageObj.setAttribute( 'alt', this.imageAltText || IMAGE_ALT_TEXT );\n        this.imageObj.onload = this.onImageLoaded;\n        this.imageObj.onerror = noop;\n\n        // create a clone of the original image\n        // so we can reset and get original props\n        // container for the original image\n        this.imageObjClone = null;\n        this.imageObjClone = this.imageObj.cloneNode(true);\n\n        // this is the offPage workspace\n        // it takes the transformed image, and calculates the positions and ratios required to create output image\n        // https://www.html5rocks.com/en/tutorials/canvas/performance/#toc-pre-render\n        // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas \n        this.canvasWorkspace = createElement( {\n            tagName: 'canvas',\n            className: `${NAMESPACE}__canvas-workspace`\n        } );\n\n        // this is the cropping tool\n        // add the cropping tool and the canvas element\n        this.cropAreaContainer = createElement( {\n            tagName: 'div',\n            className: `${NAMESPACE}__crop-container`,\n            'aria-label': 'Cropping area',\n            children : [\n                {\n                    tagName: 'div',\n                    className: `image-editor__draggable-corner ${NAMESPACE}__draggable-corner-nw`\n                },\n                {\n                    tagName: 'div',\n                    className: `image-editor__draggable-corner ${NAMESPACE}__draggable-corner-ne`\n                },\n                {\n                    tagName: 'div',\n                    className: `image-editor__draggable-corner ${NAMESPACE}__draggable-corner-sw`\n                },\n                {\n                    tagName: 'div',\n                    className: `image-editor__draggable-corner ${NAMESPACE}__draggable-corner-se`\n                },\n                {\n                    tagName: 'span',\n                    className: `image-editor__guide ${NAMESPACE}__guide-horiz-top`\n                },\n                {\n                    tagName: 'span',\n                    className: `image-editor__guide ${NAMESPACE}__guide-horiz-bottom`\n                },\n                this.canvasWorkspace ]\n\n        } );\n\n        // this is the workspace wrapper\n        this.imageEditorWorkspace = createElement( {\n            tagName: 'div',\n            className: `${NAMESPACE}__workspace`,\n            children : [ this.cropAreaContainer, this.imageObj ]\n        } );\n\n        // this is the main container\n        this.imageEditorContainer = createElement( {\n            tagName: 'div',\n            className: `${NAMESPACE}__container ${NAMESPACE}__container-loading`,\n            children : [ this.imageEditorWorkspace ]\n        } );\n\n\n        // add event listeners for dragging\n        // TODO: add helper for multiple event handlers\n        this.cropAreaContainer.addEventListener( 'mousedown', this.onStartDragCropArea );\n        this.cropAreaContainer.addEventListener( 'touchstart', this.onStartDragCropArea, { passive: true } );\n\n        // dragging flag\n        this.dragging = false;\n\n\n        // append elements\n        fragment.appendChild( this.imageEditorContainer );\n        this.container.appendChild( fragment );\n\n        // TODO: requestAnimationFrame to optimize constant coordinate updates\n        this.dragRequestId = null;\n\n        // TODO: these flags are fairly arbitraty now\n        // and are meant to solve immediate dev problems\n        // need review\n        this.resizing = false;\n        this.cropActionTriggered = false;\n\n        this.frameRateInterval = 1000 / 30;\n        this.requestAnimationFrameId = null;\n        this.lastTimestamp = null;\n\n        // callbacks\n        this.onWorkSpaceUpdated = props.onWorkSpaceUpdated;\n\n        // transform matrix defaults\n        this.transformMatrices  = {\n            transformMatrix: [ 1, 0, 0, 1, 0, 0 ],\n            inverseTransformMatrix: [ 1, 0, 0, 1 ]\n        };\n        // load image and prepare workspace\n        this.imageObj.src = this.imagePath;\n\n        return this;\n\n    }\n\n    onImageLoaded() {\n\n\n        // initial update of coordinates\n        this.updateWorkspace();\n\n        if ( typeof window !== 'undefined' ) {\n              this.lastTimestamp = window.performance.now();\n              window.addEventListener( 'resize', this.onWindowResize );\n        }\n\n        // finally, we show the workspace\n        // place it on the end of the stack to ensure the update takes place first\n        setTimeout( () => {\n            removeClass( this.imageEditorContainer, `${NAMESPACE}__container-loading` );\n        } );\n    }\n\n    onWindowResize() {\n        this.requestAnimationFrameId = window.requestAnimationFrame( this.updateWorkspace );\n    }\n\n    /*\n\n     onStartDragCropArea - main event delegator\n     Since all the interaction takes place on the cropArea,\n     we don't need to assign multiple events to each drag handle and so on\n\n     */\n    onStartDragCropArea( event ) {\n\n        event.preventDefault();\n        addClass( this.cropAreaContainer, ACTIVE_CLASS );\n        // if we've hit a drag handle, stop propagation\n        // and throw the event to the crop resize setup method\n        if  ( hasClass( event.target, `${NAMESPACE}__draggable-corner` ) ) {\n            event.stopImmediatePropagation();\n            //this.dragRequestId = window.requestAnimationFrame( this.updateWorkspace );\n\n            // signals to maintain crop dimensions\n            this.croppingArea.touched = true;\n            this.cropAreaContainer.style.transition = 'unset';\n            this.imageObj.style.transition = 'unset';\n\n            // cache the event\n            this.cropEvent = event;\n          \n            this.onStartCropResize( event );\n            return false;\n        }\n\n        // otherwise we're free to drag the image\n        document.addEventListener( 'mouseup', this.onStopDragCropArea );\n        document.addEventListener( 'touchend', this.onStopDragCropArea );\n        document.addEventListener( 'mouseleave', this.onStopDragCropArea );\n\n        const mousePos = getMousePosition( event, this.imageEditorContainer );\n\n        // we're translating the image so we have to know the delta position\n        // the start position is the mouse position - the last known position\n        this.image.drag.startX = mousePos.x - this.image.transform.translateX;\n        this.image.drag.startY = mousePos.y - this.image.transform.translateY;\n\n        // drag the image\n        document.addEventListener( 'mousemove', this.onDragCropArea );\n        document.addEventListener( 'touchmove', this.onDragCropArea, { passive: true } );\n    }\n\n\n    onDragCropArea( event ) {\n\n        this.dragging = true;\n        const mousePos = getMousePosition( event, this.imageEditorContainer );\n\n        let newDx = mousePos.x - this.image.drag.startX;\n        let newDy = mousePos.y - this.image.drag.startY;\n\n        if ( this.image.width > this.croppingArea.width && \n            this.image.height > this.croppingArea.height\n            && newDx <= this.croppingArea.position.left\n            && newDy <= this.croppingArea.position.top\n            && (-1 * newDy) + this.croppingArea.height <= this.image.height\n            && newDx >=  this.croppingArea.width - this.image.width ) {\n\n\n            this.transformMatrices = {\n                ...createTransformMatrix( \n                    this.transformMatrices.transformMatrix, \n                    this.transformMatrices.inverseTransformMatrix, \n                    newDx, \n                    newDy, \n                    this.image.transform.scale,\n                    this.image.transform.radians \n                )\n            };\n\n            this.imageObj.style.transform = `matrix(    \n                ${this.transformMatrices.transformMatrix[0]}, \n                ${this.transformMatrices.transformMatrix[1]}, \n                ${this.transformMatrices.transformMatrix[2]}, \n                ${this.transformMatrices.transformMatrix[3]}, \n                ${this.transformMatrices.transformMatrix[4]}, \n                ${this.transformMatrices.transformMatrix[5]})`;\n\n            // save the last known offset\n            // TODO: we can create some internal reducer-like methods to manage this state\n            this.image.drag = Object.assign( {},  this.image.drag, {\n                dx: newDx,\n                dy: newDy\n            });\n        }\n   }\n\n    onStopDragCropArea() {\n            this.dragging = false;\n            removeClass( this.cropAreaContainer, ACTIVE_CLASS );\n            document.removeEventListener( 'mousemove', this.onDragCropArea );\n            document.removeEventListener( 'touchmove', this.onDragCropArea, { passive: true } );\n\n            this.image.transform = Object.assign( {}, this.image.transform, {\n                translateX: this.image.drag.dx,\n                translateY: this.image.drag.dy\n            } );\n\n            this.drawImage();\n        }\n\n\n    onStartCropResize ( event ) {\n\n          this.dragging = true;\n\n          event.preventDefault();\n\n          document.addEventListener( 'touchmove', this.onCropResize );\n          document.addEventListener( 'touchend', this.onStopCropResize );\n          document.addEventListener( 'mousemove', this.onCropResize );\n          document.addEventListener( 'mouseup', this.onStopCropResize );\n\n          this.mousePos = {\n              x: 0,\n              y: 0\n          };\n    }\n\n    onCropResize ( event ) {\n        event.preventDefault();\n        this.mousePos = getMousePosition( event, this.imageEditorContainer );\n        // first check the mouse boundaries\n        // now calculate the new dimensions of the crop area\n        let width, height, left, top, right, bottom;\n\n        if ( this.cropEvent.target.classList.contains( `${NAMESPACE}__draggable-corner-se` ) ) {\n\n              // origin of image scale should be set to the opposite corner of this handle\n              this.image.transform.origin = [ 'left', 'top' ];\n\n              width  = this.mousePos.x - this.croppingArea.position.left;\n              height = this.mousePos.y - this.croppingArea.position.top;\n              left = this.croppingArea.position.left;\n              top = this.croppingArea.position.top;\n        }\n\n        if ( this.cropEvent.target.classList.contains( `${NAMESPACE}__draggable-corner-sw` ) ) {\n\n              // origin of image scale should be set to the opposite corner of this handle\n              this.image.transform.origin = [ 'right', 'top' ];\n\n              width  = this.croppingArea.width - ( this.mousePos.x - this.croppingArea.position.left );\n              left = this.mousePos.x;\n              height = this.mousePos.y - this.croppingArea.position.top;\n              top = this.croppingArea.position.top;\n\n        }\n\n        if ( this.cropEvent.target.classList.contains( `${NAMESPACE}__draggable-corner-nw` ) ) {\n\n              // origin of image scale should be set to the opposite corner of this handle\n              this.image.transform.origin = [ 'right', 'bottom' ];\n\n              width = this.croppingArea.width - ( this.mousePos.x - this.croppingArea.position.left );\n              height = this.croppingArea.height - ( this.mousePos.y - this.croppingArea.position.top );\n              left = this.mousePos.x;\n              top = this.mousePos.y ;\n              if ( this.constrain || event.shiftKey ) {\n                  top = this.mousePos.y - ( ( width / this.image.width * this.image.height ) - height );\n              }\n\n        }\n\n        if ( this.cropEvent.target.classList.contains( `${NAMESPACE}__draggable-corner-ne` ) ) {\n\n              // origin of image scale should be set to the opposite corner of this handle\n              this.image.transform.origin = [ 'left', 'bottom' ];\n              \n              width = ( this.mousePos.x - this.croppingArea.position.left );\n              height = this.croppingArea.height - ( this.mousePos.y - this.croppingArea.position.top );\n              left = this.croppingArea.position.left;\n              top = this.mousePos.y ;\n              if ( this.constrain || event.shiftKey ) {\n                  top = this.mousePos.y - ( (width / this.image.width * this.image.height ) - height );\n              }\n\n        }\n\n        // all this is about ensuring there is no 'sticking' at the extremes  \n        height = isNaN(height) ? this.croppingArea.height : height;\n        height = height >= this.croppingArea.maxDimensions.height ? this.croppingArea.maxDimensions.height : height;\n        height = height <= this.croppingArea.minDimensions.height ? this.croppingArea.minDimensions.height : height;\n        width = width >= this.croppingArea.maxDimensions.width ? this.croppingArea.maxDimensions.width : width;\n        width = width <= this.croppingArea.minDimensions.width ? this.croppingArea.minDimensions.width : width;\n        left = left >= this.croppingArea.boundary.right - this.croppingArea.minDimensions.width \n          ? this.croppingArea.boundary.right - this.croppingArea.minDimensions.width : left;\n        left = left <= this.croppingArea.boundary.left ? this.croppingArea.boundary.left : left;\n        top = top >= this.croppingArea.boundary.bottom - this.croppingArea.minDimensions.height \n          ? this.croppingArea.boundary.bottom - this.croppingArea.minDimensions.height : top;\n        top = (top <= this.croppingArea.boundary.top || isNaN(top)) ? this.croppingArea.boundary.top : top;\n\n        if ( this.constrain || event.shiftKey ) {\n            height = width / this.image.width * this.image.height;\n        }\n\n\n\n\n\n\n        this.croppingArea.position.left = left;\n        this.cropAreaContainer.style.left = `${ this.croppingArea.position.left  }px`;\n\n        this.croppingArea.width = width; \n        this.cropAreaContainer.style.width = `${ this.croppingArea.width }px`;\n\n        this.croppingArea.height = height; \n        this.cropAreaContainer.style.height = `${ this.croppingArea.height }px`;\n\n        this.croppingArea.position.top = top;\n        this.cropAreaContainer.style.top = `${ this.croppingArea.position.top }px`; \n        \n        this.croppingArea.position.bottom = this.croppingArea.position.top + height;\n        this.croppingArea.position.right = this.croppingArea.position.left + width;\n        this.cropActionTriggered = true;\n        return false;\n\n\n          // zoom out diagonally\n            // this.zoomOut = false;\n            // \n\n            // if ( width > this.croppingArea.width && height > this.croppingArea.height )  {\n            //   this.zoomOut = true;\n            // }\n            //  if (this.zoomOut)   {\n            //     this.zoomOutImage() ;\n            //  }  \n\n    }\n\n    onStopCropResize () {\n\n        this.dragging = false;\n        this.mousePos = null;\n        this.cropEvent = null;\n        removeClass( this.cropAreaContainer, ACTIVE_CLASS );\n        document.removeEventListener( 'mousemove', this.onCropResize );\n        document.removeEventListener( 'mouseup', this.onStopCropResize );\n        document.removeEventListener( 'touchmove', this.onCropResize );\n        document.removeEventListener( 'touchend', this.onStopCropResize );\n\n        this.cropAreaContainer.style.transition = 'all 0.09s linear';\n        this.imageObj.style.transition = 'transform 0.1s linear';\n\n        if (!this.cropActionTriggered) {\n          return;\n        }\n\n        this.cropActionTriggered = false;\n        this.croppingArea.scale = {\n            width: this.croppingArea.width / this.image.width,\n            height: this.croppingArea.height / this.image.height,\n            top: this.croppingArea.position.top / this.image.height,\n            left: this.croppingArea.position.left / this.image.width\n        };\n\n        \n        this.croppingArea.delta.top = this.croppingArea.position.top - this.croppingArea.delta.top;\n        this.croppingArea.delta.right = this.croppingArea.position.right - this.croppingArea.delta.right;\n        this.croppingArea.delta.bottom = this.croppingArea.position.bottom - this.croppingArea.delta.bottom;\n        this.croppingArea.delta.left = this.croppingArea.position.left - this.croppingArea.delta.left;\n\n        console.log(this.croppingArea.delta);\n\n        // are we zooming out?\n        // TODO: implement this\n        if (this.zoomOut) {\n            this.zoomOut = false;\n\n        } else {\n            this.zoomInImage();\n        }\n\n        //this.drawImage();\n    }\n\n    zoomInImage() {\n\n      let scaleRatio; // for the image\n      let anotherScaleRatio; // for the cropping area\n      \n      // get aspect ratio for the original image\n      scaleRatio = calculateAspectRatioFit(\n            this.croppingArea.width,\n            this.croppingArea.height,\n            this.image.width * this.image.transform.scale,\n            this.image.height * this.image.transform.scale,\n            this.image.rotated,\n            1 );\n            console.log('scaleRatio', scaleRatio);\n            \n        // now we want the scale ratio for the cropping area  \n        anotherScaleRatio = calculateAspectRatioFit(\n          scaleRatio.width,\n          scaleRatio.height,\n          \n          this.outerContainer.width,\n          this.outerContainer.height,\n          this.image.rotated,\n          EDITOR_GUTTER );       \n          console.log('anotherScaleRatio', anotherScaleRatio);\n          \n          // apply the initial dimensions to the image      \n          this.image.width = this.image.width * scaleRatio.ratio;\n          this.image.height = this.image.height * scaleRatio.ratio;\n\n          this.imageObj.width = this.image.width;\n          this.imageObj.height = this.image.height;\n          \n          \n\n          // apply them to the cropping area\n          this.croppingArea.width = anotherScaleRatio.width;\n          this.croppingArea.height = anotherScaleRatio.height;\n          \n          // center coords of container\n          const outerContainerCenterX = this.outerContainer.width / 2;\n          const outerContainerCenterY = this.outerContainer.height / 2 ;\n\n          const newPositionX = outerContainerCenterX - (this.croppingArea.width / 2);\n          const newPositionY = outerContainerCenterY - (this.croppingArea.height / 2);\n\n          this.croppingArea.position = {\n              top:  newPositionY,\n              right: newPositionX + this.croppingArea.width,\n              bottom: newPositionY + this.croppingArea.height,\n              left: newPositionX\n          };\n\n          const translateX = this.image.transform.translateX - -1 * (this.croppingArea.delta.left + this.croppingArea.delta.right) / 2;\n          const translateY = this.image.transform.translateY - -1 * (this.croppingArea.delta.top + this.croppingArea.delta.bottom) / 2;\n          console.log('translateY', (this.croppingArea.delta.top + this.croppingArea.delta.bottom) / 2);\n\n          this.image.transform = Object.assign( {}, this.image.transform, {\n            translateX: translateX,\n            translateY: translateY,\n            scale: this.image.transform.scale * anotherScaleRatio.ratio\n          } );\n\n          this.croppingArea.delta = {\n            ...this.croppingArea.position\n          }\n\n          this.croppingArea.boundary = {\n              ...this.croppingArea.position\n          };\n\n      // set the image transform matrix\n      this.transformMatrices = {\n        ...createTransformMatrix( \n            this.transformMatrices.transformMatrix, \n            this.transformMatrices.inverseTransformMatrix, \n            this.image.transform.translateX, \n            this.image.transform.translateY, \n            this.image.transform.scale,\n            this.image.transform.radians \n            )\n    };\n\n    // apply the matrix to the image \n    this.imageObj.style.transform = `matrix(    \n        ${this.transformMatrices.transformMatrix[0]}, \n        ${this.transformMatrices.transformMatrix[1]}, \n        ${this.transformMatrices.transformMatrix[2]}, \n        ${this.transformMatrices.transformMatrix[3]}, \n        ${this.transformMatrices.transformMatrix[4]}, \n        ${this.transformMatrices.transformMatrix[5]})`;\n\n      // resize the cropping area\n      this.cropAreaContainer.style.left = `${ this.croppingArea.position.left   }px`;\n      this.cropAreaContainer.style.top = `${ this.croppingArea.position.top  }px`;\n      this.cropAreaContainer.style.width =  `${ this.croppingArea.width  }px`;\n      this.cropAreaContainer.style.height =  `${ this.croppingArea.height  }px`;\n\n      // reset the cropping area's limits\n      this.croppingArea.maxDimensions = {\n          width: anotherScaleRatio.width >= this.outerContainer.width ? this.outerContainer.width : anotherScaleRatio.width,\n          height: anotherScaleRatio.height >= this.outerContainer.height ? this.outerContainer.height : anotherScaleRatio.height\n      };\n\n    }\n\n\n    // TODO: zoom out when pulling the draggable corners\n    zoomOutImage() {\n       console.log('zoom out!!!');\n    }\n\n\n    // update the positions and dimensions\n    // when the workspace changes\n    updateWorkspace( timestamp ) {\n\n      const now = timestamp,\n          elapsedTime = now - this.lastTimestamp;\n\n        if ( elapsedTime < this.frameRateInterval ) {\n          return;\n        }\n\n        // if enough time has passed to call the next frame\n        // reset lastTimeStamp minus 1 frame in ms ( to adjust for frame rates other than 60fps )\n        this.lastTimestamp = now - ( elapsedTime % this.frameRateInterval );\n\n        // cache the container offset width\n        this.outerContainer.width = this.imageEditorContainer.offsetWidth;\n        this.outerContainer.height = this.imageEditorContainer.offsetHeight;\n\n\n        let scaleRatio; // for the image\n        let anotherScaleRatio; // for the cropping area\n        \n        // if nothing has been touched, size the image to the workspace\n        if ( ! this.croppingArea.touched ) {\n            // get aspect ratio for the original image\n            scaleRatio = calculateAspectRatioFit(\n                  this.imageObj.naturalWidth,\n                  this.imageObj.naturalHeight,\n                  this.outerContainer.width,\n                  this.outerContainer.height,\n                  this.image.rotated,\n                  1 );\n\n          // now we want the scale ratio for the cropping area  \n          anotherScaleRatio = calculateAspectRatioFit(\n            scaleRatio.width,\n            scaleRatio.height,\n            this.outerContainer.width,\n            this.outerContainer.height,\n            this.image.rotated,\n            EDITOR_GUTTER );       \n            \n            // apply the initial dimensions to the image      \n            this.image.width = scaleRatio.width;\n            this.image.height = scaleRatio.height;\n\n            this.imageObj.width = this.image.width;\n            this.imageObj.height = this.image.height;\n\n            // save this so we can use it for later transformations/zooms\n            this.image.transform.scale = anotherScaleRatio.ratio;\n            \n            // apply them to the cropping area\n            this.croppingArea.height = anotherScaleRatio.width;\n            this.croppingArea.width = anotherScaleRatio.height;\n\n            // center coords of container\n            const outerContainerCenterX = this.outerContainer.width / 2;\n            const outerContainerCenterY = this.outerContainer.height / 2 ;\n\n            const newPositionX = outerContainerCenterX - (this.croppingArea.width / 2);\n            const newPositionY = outerContainerCenterY - (this.croppingArea.height / 2);\n\n            this.croppingArea.position = {\n                top:  newPositionY,\n                right: newPositionX + this.croppingArea.width ,\n                bottom: newPositionY + this.croppingArea.height ,\n                left: newPositionX\n            };\n\n            this.croppingArea.delta = {\n              ...this.croppingArea.position\n            }\n\n            this.croppingArea.boundary = {\n                ...this.croppingArea.position\n            };\n\n            this.image.transform = Object.assign( {}, this.image.transform, {\n                translateX: outerContainerCenterX - (scaleRatio.width / 2),\n                translateY: 0\n            } );\n\n        // else the ratio we care about is the resized cropping area \n        } else {\n            scaleRatio = calculateAspectRatioFit(\n                  this.croppingArea.width,\n                  this.croppingArea.height,\n                  this.outerContainer.width,\n                  this.outerContainer.height,\n                  this.image.rotated,\n                  EDITOR_GUTTER );\n\n\n            this.image.width = this.image.width * scaleRatio.ratio;\n            this.image.height = this.image.height * scaleRatio.ratio;       \n            this.image.transform.scale = this.image.transform.scale * scaleRatio.ratio;\n\n            this.croppingArea.width = this.croppingArea.scale.width * this.image.width;\n            this.croppingArea.height = this.croppingArea.scale.height * this.image.height;\n\n            this.croppingArea.position = {\n                top:  ( this.croppingArea.scale.top * this.image.height ),\n                right: ( this.croppingArea.scale.left * this.image.width) + this.croppingArea.width,\n                bottom: ( this.croppingArea.scale.top * this.image.height ) + this.croppingArea.height,\n                left: ( this.croppingArea.scale.left * this.image.width)\n            };\n        }\n\n\n\n      // set the image transform matrix\n      this.transformMatrices = {\n          ...createTransformMatrix( \n              this.transformMatrices.transformMatrix, \n              this.transformMatrices.inverseTransformMatrix, \n              this.image.transform.translateX, \n              this.image.transform.translateY, \n              this.image.transform.scale,\n              this.image.transform.radians \n              )\n      };\n\n      // apply the matrix to the image \n      this.imageObj.style.transform = `matrix(    \n          ${this.transformMatrices.transformMatrix[0]}, \n          ${this.transformMatrices.transformMatrix[1]}, \n          ${this.transformMatrices.transformMatrix[2]}, \n          ${this.transformMatrices.transformMatrix[3]}, \n          ${this.transformMatrices.transformMatrix[4]}, \n          ${this.transformMatrices.transformMatrix[5]})`;\n\n        // resize the cropping area\n        this.cropAreaContainer.style.left = `${ this.croppingArea.position.left   }px`;\n        this.cropAreaContainer.style.top = `${ this.croppingArea.position.top  }px`;\n        this.cropAreaContainer.style.width =  `${ this.croppingArea.width  }px`;\n        this.cropAreaContainer.style.height =  `${ this.croppingArea.height  }px`;\n\n        // reset the cropping area's limits\n        this.croppingArea.maxDimensions = {\n            width: anotherScaleRatio.width >= this.outerContainer.width ? this.outerContainer.width : anotherScaleRatio.width,\n            height: anotherScaleRatio.height >= this.outerContainer.height ? this.outerContainer.height : anotherScaleRatio.height\n        };\n\n        // draw to canvas\n        // TODO: we don't actually have to do this at all until the final save\n        this.drawImage();\n\n    }\n\n\n    // TODO: at the moment we're calling this after every image transformation\n    // in fact, because we're keeping track of the transforms, we don't need to call it at all until the end\n    // it's just for the preview\n    drawImage() {\n\n        const context = this.canvasWorkspace.getContext('2d');\n        const rotated = this.image.rotated;\n\n       \n        const scaledCropWidth = Math.floor( ( this.croppingArea.width / this.image.transform.scale  ) );\n        const scaledCropHeight = Math.floor( ( this.croppingArea.height / this.image.transform.scale  ) );\n\n\n\n        this.canvasWorkspace.width = scaledCropWidth;\n        this.canvasWorkspace.height =  scaledCropHeight;\n\n        context.clearRect( 0, 0, scaledCropWidth / 2, scaledCropWidth / 2  );\n\n        // TODO\n        if ( rotated ) {\n            // origin of the canvas rotate is the middle\n            // context.translate( this.canvasWorkspace.width / 2, this.canvasWorkspace.width / 2 );\n            // context.rotate( this.image.transform.radians );\n        }\n        \n\n        context.save();\n\n\n        // invert the matrix and get the original coords \n        // from the top, left  of the cropping tool\n        const sourceCoords = getOriginalCoordinatesFromTransformedMatrix( \n            this.transformMatrices.transformMatrix, \n            this.transformMatrices.inverseTransformMatrix,\n            this.croppingArea.position.left,\n            this.croppingArea.position.top\n        );\n\n        // this is where and how far we want to crop the original image\n        const sourceX = sourceCoords.x,\n              sourceY = sourceCoords.y,\n              sourceWidth = scaledCropWidth,\n              sourceHeight = scaledCropHeight;\n\n        // get the destination x, y\n        const destX = 0,\n              destY = 0,\n\n        // the cropped area\n            destWidth = scaledCropWidth,\n            destHeight = scaledCropHeight;\n\n\n        // now draw!    \n        context.drawImage(\n            this.imageObj,\n            // x, y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.\n            sourceX, sourceY,\n            // w and h of the sub-rectangle of the source image to draw into the destination context.\n            sourceWidth, sourceHeight,\n            // x, y coordinates in the destination canvas at which to place the top-left corner of the source image.\n            destX, destY,\n            // w and h of the image in the destination canvas. Changing these values scales the sub-rectangle in the destination context.\n            destWidth, destHeight );\n\n        context.restore();\n\n        if ( DEBUG ) {\n\n            this.onWorkSpaceUpdated( {\n                canvas: this.canvasWorkspace,\n                original: {\n                    width: this.imageObj.naturalWidth,\n                    height: this.imageObj.naturalHeight\n                },\n                cropped: {\n                    width: scaledCropWidth,\n                    height: scaledCropHeight,\n                    rotated: rotated\n                }\n            } );\n        }  \n    }\n\n    rotate( degrees ) {\n        // TODO: check if one of 90/180/270\n        this.image.transform.degrees = degrees;\n        this.image.transform.radians = getRadianFromDegrees( degrees );\n        this.image.rotated = ! ( ( this.image.transform.degrees % 180 ) === 0 );\n        this.updateWorkspace();\n    }\n\n    // ==== editing API\n    // rotate( callback ) // returns new coords\n    // reflect( callback ) // returns new coords\n    // changeAspectRatio( callback ) // returns new coords\n    // save() // returns blob\n    // preview() // returns image/png for optional preview before save\n    // reset( callback )\n    // onImageLoaded( callback ) // allows consumers to do something after bootstrap\n    // destroy () clear container and remove all event listeners\n    // getOriginalImage() // returns original image\n    // getWorkingImage() // returns image at current crop state\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/image-editor.js","/**\n * Create a noop call\n * @returns {Function}\n */\nexport function noop() {\n    setTimeout( Function.prototype, 10000 );\n}\n\n/**\n * Throttle a func call every {threshhold}ms\n * https://developer.mozilla.org/en-US/docs/Web/Events/resize\n * Usage:\n    throttle(\"resize\", \"optimizedResize\");\n    // handle event\n    window.addEventListener(\"optimizedResize\", function() {\n        console.log(\"Resource conscious resize callback!\");\n    });\n */\nexport function throttle( type, name, obj = window ) {\n    let running = false;\n    const func = function() {\n        if (running) { return; }\n        running = true;\n        requestAnimationFrame(function throttledRequestAnimationFrame() {\n            obj.dispatchEvent( new CustomEvent( name ) );\n            running = false;\n        });\n    };\n    obj.addEventListener(type, func);\n}\n\n/**\n * Creates a simple DOM tree\n * @example\nconst htmlElementToAppend = createElement({\n  tagName: 'span',\n  className: 'new-class-name',\n  text: 'Spannend!',\n  attributes: {\n    'title': 'Geil!'\n  },\n  children: [{ \n      // recursive call to createElement()\n  }]\n})); // returns => <span class=\"new-class-name\" title=\"Geil!\">Spannend!</span>\n * @typedef {Object} OptionsObject\n * @property {String} tagName\n * @property {String} className\n * @property {String} text\n * @property {Object} attributes\n * @property {Array<options>} children\n * \n * @param {OptionsObject} options\n * @returns {HTMLElement}\n */\nexport function createElement( options ) {\n\n    const element = document.createElement( options.tagName );\n\n    if ( options.className ) {\n        element.className = options.className;\n    }\n\n    if ( options.attributes ) {\n        for ( let attr in options.attributes ) {\n            element.setAttribute( attr, options.attributes[attr] )\n        }\n    }\n\n    if ( options.text ) {\n        element.appendChild( document.createTextNode( options.text ) );\n    }\n\n    if ( options.children && options.children.length ) {\n        let i = 0;\n        let childrenLength = options.children.length;\n        for (; i < childrenLength; i++ ) {\n            element.appendChild( options.children[i] instanceof window.HTMLElement ? options.children[i] : createElement( options.children[i] ) );\n        }\n    }\n\n    return element;\n\n}\n\n/**\n * @example\n const offsetValues = getOffsetRelativeToParent(\n    '.child-selector',\n    '#parent-selector'\n ); // returns => { top: {n}, right: {n}, bottom: {n}, left: {n} }\n * @typedef {Object} OffsetObject\n * @property {Integer} top\n * @property {Integer} right\n * @property {Integer} bottom\n * @property {Integer} left\n *\n * @param {String} childCssSelector\n * @param {String} parentCssSelector\n * @returns {OffsetObject}\n */\nexport function getOffsetRelativeToParent( childCssSelector, parentCssSelector) {\n\n    // we have to query the DOM elements to get the latest position data\n    // in case there has been a CSS transform on the element(s)\n    const childElem = document.querySelector( childCssSelector );\n    const parentElem = document.querySelector( parentCssSelector );\n\n    if ( ! childElem || ! parentElem ) {\n        throw new Error( `One or more DOM elements can't be found with: ${childCssSelector} or ${parentCssSelector}` );\n    }\n\n    const childRect = childElem.getBoundingClientRect();\n    const parentRect = parentElem.getBoundingClientRect();\n\n    return {\n        top: childRect.top - parentRect.top,\n        right: childRect.right - parentRect.right,\n        bottom: childRect.bottom - parentRect.bottom,\n        left: childRect.left - parentRect.left\n    };\n\n}\n\n/**\n * @example\n const offsetValues = getCenterPositionRelativeToParent(\n    HTMLElement,\n    HTMLElement.parentNode\n ); // returns => { left: {n}, top: {n} }\n * @typedef {Object} CenterPosition\n * @property {Integer} top\n * @property {Integer} left\n *\n * @param {HTMLElement} childElement\n * @param {HTMLElement} parentElement\n * @returns {CenterPosition}\n */\nexport function getCenterPositionRelativeToParent( childElement, parentElement ) {\n    return {\n        left: ( parentElement.offsetWidth / 2 - childElement.offsetWidth / 2 ),\n        top: ( parentElement.offsetHeight / 2 - childElement.offsetHeight / 2 )\n    };\n}\n\n/**\n * @example\n const mousePos = getMousePosition(\n    DOMEventObject,\n    HTMLElement\n ); // returns => { x: {n}, y: {n} }\n * @typedef {Object} PositionObject\n * @property {Integer} x\n * @property {Integer} y\n *\n * @param {DOMEventObject} event\n * @param {HTMLElement} contextElement (optional if you need position relative to parent offset)\n * @returns {PositionObject}\n */\nexport function getMousePosition( event, contextElement = null ) {\n\n    const offsetLeft = contextElement ? contextElement.offsetLeft : window.pageXOffset;\n    const offsetTop = contextElement ? contextElement.offsetTop : window.pageYOffset;\n\n    const x = ( event.pageX || ( event.touches && event.touches[0].pageX ) ) - offsetLeft;\n    const y = ( event.pageY || ( event.touches && event.touches[0].pageY ) ) - offsetTop;\n\n    return {\n        x,\n        y\n    };\n}\n\n\n/**\n * Conserve aspect ratio of the orignal region. Useful when shrinking/enlarging\n * images to fit into a certain area.\n * At the moment we expect rotations of only 90 degrees.\n * This could be improved by always checking if the bounding box of a rotated rectangle fits within the scaled container\n *\n * @param {Number} srcWidth Source area width\n * @param {Number} srcHeight Source area height\n * @param {Number} maxWidth Fittable area maximum available width\n * @param {Number} maxHeight Fittable area maximum available height\n * @param {Boolean} rotated\n * @param {Number} gutter - Optional percentage to increase or decrease the new fit dimensions\n * @return {Object} { width, heigth }\n */\nexport function calculateAspectRatioFit( srcWidth, srcHeight, maxWidth, maxHeight, rotated = false, gutter = 1 ) {\n\n    const aspectRatio = rotated ? Math.min( maxHeight / srcWidth, maxWidth / srcHeight ) : Math.min( maxWidth / srcWidth, maxHeight / srcHeight );\n    // reduce ratio to gutter percentage amount\n    const ratio = aspectRatio * gutter;\n\n    // widths with ratio applied\n    const width = Math.floor( srcWidth * ratio ) ;\n    const height = Math.floor( srcHeight * ratio ) ;\n\n    return {\n        ratio,\n        width,\n        height\n    };\n}\n\nexport function calculateOriginalDimensionsFromScaled( scaledWidth, scaledHeight, ratio ) {\n\n    // widths with ratio applied\n    const width = Math.floor( scaledWidth / ratio ) ;\n    const height = Math.floor( scaledHeight / ratio ) ;\n\n    return {\n        width,\n        height\n    };\n}\n\nexport function transformCSS( element, translateX = 0, translateY = 0, scale = 0, radians = 0 ) {\n    element.style.transform = `translate( ${ translateX }px, ${ translateY }px ) scale( ${ scale } ) rotate( ${ radians }rad ) translateZ( 0px )`;\n    return element;\n}\n\n// Converts from degrees to radians.\nexport function getRadianFromDegrees( degrees ) {\n    return degrees * Math.PI / 180;\n}\n\n// Converts from radians to degrees.\nexport function getDegreesFromRadians( radians ) {\n    return radians * 180 / Math.PI;\n}\n\nexport function regExp( name ) {\n    return new RegExp( `(^| )${name}( |$)` );\n}\n\nexport function hasClass( element, className ) {\n    if ( ! ( 'classList' in Element.prototype )  ) {\n        return regExp( name ).test( this.element.className );\n    }\n    return element.classList.contains( className );\n}\n\nexport function removeClass( element, className ) {\n    if ( ! ( 'classList' in Element.prototype ) ) {\n        return element.className =  element.className.replace( regExp( name ), '' );\n    }\n    return element.classList.remove( className );\n}\n\nexport function addClass( element, className ) {\n    if ( ! ( 'classList' in Element.prototype ) ) {\n        return element.className += ' ' + className;\n    }\n    return element.classList.add( className );\n}\n\nexport function createTransformMatrix( transformMatrix, inverseTransformMatrix, x, y, scale, rotate ) {\n\n    // create the rotation and scale parts of the transformMatrix\n    transformMatrix[3] =   transformMatrix[0] = Math.cos(rotate) * scale;\n    transformMatrix[2] = -(transformMatrix[1] = Math.sin(rotate) * scale);\n\n    // add the translation\n    transformMatrix[4] = x;\n    transformMatrix[5] = y;\n\n    // calculate the inverse transformation\n\n    // first get the cross product of x axis and y axis\n    var cross = transformMatrix[0] * transformMatrix[3] - transformMatrix[1] * transformMatrix[2];\n\n    // now get the inverted axis\n    inverseTransformMatrix[0] =  transformMatrix[3] / cross;\n    inverseTransformMatrix[1] = -transformMatrix[1] / cross;\n    inverseTransformMatrix[2] = -transformMatrix[2] / cross;\n    inverseTransformMatrix[3] =  transformMatrix[0] / cross;\n    \n\n    return {\n        transformMatrix,\n        inverseTransformMatrix\n    };\n};\n\n// params: x, y coords in current, transformed matrix\n// returns x,y coords from original, untransformed matrix\nexport function getOriginalCoordinatesFromTransformedMatrix( transformMatrix, inverseTransformMatrix, x, y ) {\n    var xx, yy;\n    xx = x - transformMatrix[4];     // remove the translation\n    yy = y - transformMatrix[5];     // by subtracting the origin\n    // return the point {x:?,y:?} by multiplying xx,yy by the inverse matrix\n    return {\n        x:   xx * inverseTransformMatrix[0] + yy * inverseTransformMatrix[2],\n        y:   xx * inverseTransformMatrix[1] + yy * inverseTransformMatrix[3]\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js"],"sourceRoot":""}